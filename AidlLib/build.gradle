apply plugin: 'com.android.library'

android {
    compileSdkVersion 21
    buildToolsVersion "21.1.1"

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 21
        versionCode 200019
        versionName '2.0.19'
    }

    defaultPublishConfig "release"
    publishNonDefault false

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            resources.srcDirs = ['src']
            aidl.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
        }

        androidTest{
            java.srcDirs = ['androidTest']
        }
    }
}

dependencies {
    compile project(':dependencyLibs:Mavlink')
}

task androidJavadocs(type: Javadoc){
    source = android.sourceSets.main.java.srcDirs
    exclude '**/*.aidl'
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

android.libraryVariants.all { variant ->
    def name = variant.buildType.getName()
    def task = project.tasks.create "jar${name.capitalize()}", Jar

    task.dependsOn variant.javaCompile
    task.dependsOn(androidJavadocs)
    task.dependsOn variant.processJavaResources

    task.from variant.javaCompile.destinationDir
    task.from androidJavadocs.destinationDir
    task.from variant.processJavaResources.destinationDir
    task.from android.sourceSets.main.java.srcDirs

    //Include dependent jars with some exceptions
    task.from configurations.compile.findAll {
        it.getName() != 'android.jar' && !it.getName().startsWith('junit') && !it.getName().startsWith('hamcrest')
    }.collect {
        it.isDirectory() ? it : zipTree(it)
    }

    task.setDestinationDir(new File("${rootDir}/ClientLib/mobile/libs"))

    artifacts.add('archives', task);
}